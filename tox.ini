[tox]
minversion = 4.0.0
envlist =
    lint
    py-ansible{2.17}-{centos9,debian11,ubuntu22}-{default,local}
    py3.11-ansible{2.18}-{centos9,debian12,ubuntu24}-default

[testenv]
description =
    default: Molecule scenario testing compilation using remote tarfile
    local: Molecule scenario testing compilation using local tarfile
deps =
    ansible2.17: ansible-core==2.17.*
    ansible2.18: ansible-core==2.18.*
    -r ./requirements/dev-requirements.txt
commands =
    default: molecule {posargs:test -s default}
    local: molecule {posargs:test -s local-tarfile}
setenv =
    ANSIBLE_COLLECTIONS_PATH={work_dir}/{env_name}/.ansible/collections/ansible_collections
    ANSIBLE_ROLES_PATH={work_dir}/{env_name}/.ansible/roles
    MOLECULE_EPHEMERAL_DIRECTORY={work_dir}/{env_name}/.cache/molecule
    MOLECULE_NAME={env_name}
    PY_COLORS=1
    TOX_ENVNAME={env_name}
    centos9: MOLECULE_IMAGE=trfore/docker-centos9-systemd
    debian11: MOLECULE_IMAGE=trfore/docker-debian11-systemd
    debian12: MOLECULE_IMAGE=trfore/docker-debian11-systemd
    ubuntu22: MOLECULE_IMAGE=trfore/docker-ubuntu2204-systemd
    ubuntu24: MOLECULE_IMAGE=trfore/docker-ubuntu2404-systemd
passenv =
    DOCKER_HOST
    JSVC_VERSION

[testenv:lint]
description = Run all linting tasks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run {posargs:--all --show-diff-on-failure}
setenv =
    TOX_ENVNAME={env_name}
