[tox]
minversion = 4.0.0
envlist =
    lint
    py-ansible{2.17}-centos9
    py-ansible{2.17}-ubuntu{22}
    py3.11-ansible{2.18}-centos9
    py3.11-ansible{2.17,2.18}-debian{11}
    py3.11-ansible{2.18}-ubuntu{24}

[testenv]
description =
    centos{9}: Run molecule scenario on CentOS (default)
    debian{11}: Run molecule scenario on Debian (default)
    ubuntu{22,24}: Run molecule scenario on Ubuntu (default)
deps =
    ansible2.17: ansible-core==2.17.*
    ansible2.18: ansible-core==2.18.*
    -r ./requirements/dev-requirements.txt
commands = molecule {posargs:test -s default}
setenv =
    ANSIBLE_COLLECTIONS_PATH={work_dir}/{env_name}/.ansible/collections/ansible_collections
    ANSIBLE_ROLES_PATH={work_dir}/{env_name}/.ansible/roles
    MOLECULE_EPHEMERAL_DIRECTORY={work_dir}/{env_name}/.cache/molecule
    MOLECULE_NAME={env_name}
    PY_COLORS=1
    TOX_ENVNAME={env_name}
    centos9: MOLECULE_IMAGE=trfore/docker-centos9-systemd
    debian11: MOLECULE_IMAGE=trfore/docker-debian11-systemd
    ubuntu22: MOLECULE_IMAGE=trfore/docker-ubuntu2204-systemd
    ubuntu24: MOLECULE_IMAGE=trfore/docker-ubuntu2404-systemd
passenv =
    DOCKER_HOST

[testenv:lint]
description = Run all linting tasks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run {posargs:--all --show-diff-on-failure}
setenv =
    TOX_ENVNAME={env_name}
